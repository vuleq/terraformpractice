name: Terraform CI/CD with GitHub Actions

on:
  push:
    branches:
      - main
      - dev
      - staging
      - prod
  pull_request:
    branches:
      - main
      - dev
      - staging
      - prod
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev/staging/prod)"
        required: true
        default: dev

jobs:
  terraform:
    name: Deploy to Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine environment
        id: set-env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

      - name: Check environment directory exists
        run: |
          DIR="./env/${{ steps.set-env.outputs.environment }}"
          if [ ! -d "$DIR" ]; then
            echo "‚ùå ERROR: Directory $DIR does not exist!"
            exit 1
          fi

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: ./env/${{ steps.set-env.outputs.environment }}

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: ./env/${{ steps.set-env.outputs.environment }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./env/${{ steps.set-env.outputs.environment }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./env/${{ steps.set-env.outputs.environment }}

      - name: Terraform Apply
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve
        working-directory: ./env/${{ steps.set-env.outputs.environment }}
